# R2 / Object Storage
r2:
  # S3-compatible endpoint for Cloudflare R2 or other object storage.
  endpoint_url: "https://2238a825c5aca59233eab1f221f7aefb.r2.cloudflarestorage.com"
  # Access key ID used for uploads.
  access_key_id: ""
  # Secret key used for uploads.
  secret_access_key: ""
  # Bucket name where snapshots are stored.
  archive_bucket_name: "forest-archive"
  latest_bucket_name: "infra-team-filecoin-archive"
  latest_v2_bucket_name: "forest-snapshots-v2"

# External Disk / Filesystem
external_disk:
  # List or device glob for RAID members (if any). Leave empty for single disk.
  raid_devices: []
  # RAID device name when `raid_devices` is used.
  raid_device_name: md0
  # RAID level (e.g., 0/1/5). Only used when `raid_devices` is set
  raid_level: 0
  # Mount point for the data disk that will hold archive and snapshots.
  mount_point: /data
  # Filesystem type used when formatting the disk or array.
  filesystem_type: ext4
  mount_options: defaults,noatime,nodiratime,logbufs=8,logbsize=256k

# Docker Compose
docker_compose:
  # Path where Compose files and state are placed.
  project_path: "/home/{{ ansible_user }}/forest-{{ forest.network }}-{{ forest.node_type }}"

# Forest configuration
forest:
  image:
    # Container image repository for Forest.
    name: ghcr.io/chainsafe/forest
    # Container image tag.
    tag: latest-fat
  # Filecoin network identifier (e.g., `mainnet`, `calibnet`). Used in names and configs.
  network: "calibnet"
  # Node type descriptor used in naming; archive nodes keep full chain state.
  node_type: "archive"
  # Application log verbosity (debug, info, warning, error).
  log_level: "info" # debug, info, warning, error
  # Rust log filter passed to the process (debug, info, warn, error, off).
  rust_log_level: "info" # debug, info, warn, error, off
  # Enables F3 sidecar FFI if required.
  f3_enabled_sidecar: false
  # Target number of peers to connect to.
  target_peer_count: 5000
  # Extra CLI args for the Forest process; `--no-gc` recommended for snapshotters.
  container_extra_args:
    - "--no-gc"
  host:
    # Forest data directory on host.
    data_path: "/data/forest_data"
    # Snapshot path on host.
    snapshot_path: "/data/snapshots"
    # Forest config directory on host.
    config_path: "/home/{{ ansible_user }}/forest/config"
    # Helper scripts directory on host.
    scripts_path: "/home/{{ ansible_user }}/forest/scripts"
  container:
    # Config directory inside container.
    config_path: "/home/forest/config"
    # Data directory inside container.
    data_path: "/home/forest/data"
    # Scripts directory inside container.
    scripts_path: "/scripts"
    # Snapshot output path inside container.
    snapshot_path: "/home/forest/snapshots"
    # Archival snapshot output path inside container.
    # Metrics/logs path inside container.
    metrics_path: "/data/metrics"
  compute:
    # Enable compute-state job service.
    enabled: false
    # Starting epoch for compute-state.
    start_epoch: 0
    # Batch size for compute-state processing.
    batch_size: 100
  build_snapshots_historic:
    # Enable historic snapshots builder.
    enabled: false
    # If true, wait for compute-state to finish before starting snapshot generation.
    wait_for_computation: true
    # Starting epoch for historic snapshot generation.
    start_epoch: 0
    # Delay between historic snapshot runs in seconds.
    delay: "{{ 24 * 60 * 60 }}"
  build_snapshots_latest:
    # Enable periodic latest snapshot builder.
    enabled: false
    # Delay between latest snapshot runs in seconds.
    delay: "{{ 2 * 60 * 60 }}"
  upload_snapshots:
    # Enable uploader service to push snapshots to object storage.
    enabled: false
  validate_snapshots:
    # Enable validator service to verify produced snapshots.
    enabled: false
  rpc:
    # Enable RPC service.
    enabled: true
    # RPC port exposed by Forest.
    port: 2345
    # RPC port on host.
    host_port: 32345
  metrics:
    # Enable metrics service.
    enabled: true
    # Metrics port exposed by Forest.
    port: 6116
    # Metrics port on host.
    host_port: 36116

  # Whether to import a provided libp2p private key.
  import_libp2p_private_key: false
  # The libp2p private key material (handle securely).
  libp2p_private_key: ""

# RabbitMQ
rabbitmq:
  # Whether to deploy RabbitMQ alongside the pipeline.
  enabled: true
  #  RabbitMQ username.
  user: "guest"
  # RabbitMQ password.
  password: "password"
  # Host path for RabbitMQ data.
  data_path: "/data/rabbitmq-{{ forest.network }}-{{ forest.node_type }}"

# # Grafana Alloy (Metrics/Logs Shipping)
grafana_alloy:
  # Whether to deploy Grafana Alloy sidecar.
  enabled: true
  # Host path for Alloy configs.
  config_path: "/home/{{ ansible_user }}/grafana-alloy-{{ forest.network }}-{{ forest.node_type }}"
  # Grafana Alloy container image.
  image: "grafana/alloy:latest"
  # Grafana Cloud API key used for remote_write.
  api_key: "GRAFANA_CLOUD_API_KEY"
  metrics:
    # Grafana Cloud Prometheus endpoint.
    endpoint: "https://prometheus-prod-xx.grafana.net"
    # Prometheus instance/user ID.
    username: "GRAFANA_CLOUD_METRICS_USERNAME"
  logs:
    # Grafana Cloud Logs endpoint.
    endpoint: "https://logs-prod-xx.grafana.net"
    # Logs instance/user ID.
    username: "GRAFANA_CLOUD_LOGS_USERNAME"

# Slack Notifications
slack:
  # Bot token used to post notifications.
  token: "SLACK_TOKEN"
  # Default channel for notifications.
  channel: "#forest-dump"
