#!/bin/bash
# Strict mode
set -euo pipefail

# Constants
readonly METRICS_PORT="{{ forest.metrics.port }}"
readonly METRICS_DIR="{{ forest.container.metrics_path }}/${JOB_NAME}"
readonly METRICS_SERVER="{{ forest.container.scripts_path }}/metrics-server.py"

init_gauge() {
  local name="$1"
  local help="$2"
  local initial="${3:-0}"
  cat >"${METRICS_DIR}/${name}.prom" <<EOF
# HELP forest_${name} ${help}
# TYPE forest_${name} gauge
forest_${name} ${initial}
EOF
}

init_counter() {
  local name="$1"
  local help="$2"
  local initial="${3:-0}"
  cat >"${METRICS_DIR}/${name}.prom" <<EOF
# HELP forest_${name} ${help}
# TYPE forest_${name} counter
forest_${name} ${initial}
EOF
}

init_histogram() {
  local name="$1"
  local help="$2"
  cat >"${METRICS_DIR}/${name}.prom" <<EOF
# HELP forest_${name}_seconds ${help}
# TYPE forest_${name}_seconds histogram
forest_${name}_seconds_bucket{le="60"} 0
forest_${name}_seconds_bucket{le="300"} 0
forest_${name}_seconds_bucket{le="600"} 0
forest_${name}_seconds_bucket{le="1200"} 0
forest_${name}_seconds_bucket{le="3600"} 0
forest_${name}_seconds_bucket{le="+Inf"} 0
forest_${name}_seconds_sum 0
forest_${name}_seconds_count 0
EOF
}

update_histogram() {
  local name="$1"
  local duration="$2"
  local file="${METRICS_DIR}/${name}.prom"

  local count_value sum_value
  count_value=$(awk '/_count/ {print $2}' "$file")
  sum_value=$(awk '/_sum/ {print $2}' "$file")

  cat >"$file" <<EOF
# HELP forest_${name}_seconds Time taken to ${name/[_-]/ } snapshots
# TYPE forest_${name}_seconds histogram
forest_${name}_seconds_bucket{le="60"} $((duration <= 60 ? count_value + 1 : count_value))
forest_${name}_seconds_bucket{le="300"} $((duration <= 300 ? count_value + 1 : count_value))
forest_${name}_seconds_bucket{le="600"} $((duration <= 600 ? count_value + 1 : count_value))
forest_${name}_seconds_bucket{le="1200"} $((duration <= 1200 ? count_value + 1 : count_value))
forest_${name}_seconds_bucket{le="3600"} $((duration <= 3600 ? count_value + 1 : count_value))
forest_${name}_seconds_bucket{le="+Inf"} $((count_value + 1))
forest_${name}_seconds_sum $((sum_value + duration))
forest_${name}_seconds_count $((count_value + 1))
EOF
}

# Initialize metrics
setup_metrics() {
  mkdir -p "${METRICS_DIR}"

  [[ -f "${METRICS_DIR}/progress_epoch.prom" ]] || \
    init_gauge "progress_epoch" "Current epoch being validated"

  [[ -f "${METRICS_DIR}/total_epochs.prom" ]] || \
    init_gauge "total_epochs" "Total epochs to validate"

  [[ -f "${METRICS_DIR}/success_count.prom" ]] || \
    init_counter "success_count" "Number of successfully validated snapshots"

  [[ -f "${METRICS_DIR}/failure_count.prom" ]] || \
    init_counter "failure_count" "Number of failed snapshot validations"

  [[ -f "${METRICS_DIR}/download_duration.prom" ]] || \
    init_histogram "download_duration" "Time taken to download snapshots"

  [[ -f "${METRICS_DIR}/process_duration.prom" ]] || \
    init_histogram "process_duration" "Time taken to process snapshots"

  [[ -f "${METRICS_DIR}/upload_duration.prom" ]] || \
    init_histogram "upload_duration" "Time taken to upload snapshots"
}

update_progress_metric() {
  local current_epoch="$1"
  echo "forest_progress_epoch ${current_epoch}" >"${METRICS_DIR}/progress_epoch.prom"
}

update_total_epochs_metric() {
  local total_epochs="$1"
  echo "forest_total_epochs ${total_epochs}" >"${METRICS_DIR}/total_epochs.prom"
}

increment_counter() {
  local name="$1"
  local file="${METRICS_DIR}/${name}.prom"
  local current_value
  current_value=$(tail -n 1 "$file" | awk '{print $2}')
  echo "forest_${name} $((current_value + 1))" >"$file"
}

increment_success_counter() {
  increment_counter "success_count"
}

increment_failure_counter() {
  increment_counter "failure_count"
}

update_download_duration() {
  update_histogram "download_duration" "$1"
}

update_process_duration() {
  update_histogram "process_duration" "$1"
}

update_upload_duration() {
  update_histogram "upload_duration" "$1"
}

start_metrics_server() {
  nohup python3 "${METRICS_SERVER}" "${METRICS_PORT}" >/dev/null 2>&1 &
  info "Metrics server started on port ${METRICS_PORT}"
}
