#!/usr/bin/env python3
from http.server import HTTPServer, BaseHTTPRequestHandler
import os

JOB_NAME = os.getenv("JOB_NAME")
METRICS_DIR = f"{{ forest.container.metrics_path }}/{JOB_NAME}"

class MetricsHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/metrics':
            self.send_response(200)
            self.send_header('Content-Type', 'text/plain; version=0.0.4')
            self.end_headers()

            # Concatenate all metric files
            for filename in os.listdir(METRICS_DIR):
                if filename.endswith('.prom'):
                    file_path = os.path.join(METRICS_DIR, filename)
                    try:
                        with open(file_path, 'r') as f:
                            self.wfile.write(f.read().encode())
                    except Exception as e:
                        print(f"Error reading {file_path}: {e}")
        else:
            self.send_response(404)
            self.end_headers()

    def log_message(self, format, *args):
        # Disable request logging
        pass

def run_server(port):
    server = HTTPServer(('', port), MetricsHandler)
    print(f"Metrics server started on port {port}")
    server.serve_forever()

if __name__ == '__main__':
    import sys
    port = int(sys.argv[1]) if len(sys.argv) > 1 else 6117
    run_server(port)
